{"version":3,"sources":["constants/About.js","components/About/About.js","constants/Skills.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","constants/Projects.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/SideNav/SideNav.js","components/Portfolio/Portfolio.js","components/App.js","serviceWorker.js","index.js"],"names":["about","heading","About","props","className","bio","skills","quote","techSkills","industryKnowledge","interpersonalSkills","SkillCard","skill","Skills","map","ProjectCard","project","name","description","projects","projectList","Projects","SectionContainer","selectedHeading","selectedQuote","selectedSection","SideNav","handleSectionClick","src","alt","onClick","Portfolio","App","selectionName","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+ZAAaA,G,YAAQ,CACjBC,QAAS,WACT,MAAS,yFACT,IAAO,u8BCAEC,EAAM,SAACC,GAChB,OACI,yBAAKC,UAAU,mBACTJ,EAAMK,MCNPC,G,MAAO,CAChBL,QAAQ,SACRM,MAAO,qCACPC,WAAW,CACP,aACA,UACA,MACA,IACA,OACA,MACA,aAEJC,kBAAkB,CACtB,WACA,WACA,MACA,UACA,YAEIC,oBAAqB,CACjB,gBACA,WACA,kBACA,aACA,gBCnBKC,G,MAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACI,yBAAKR,UAAU,cACVQ,KCJAC,EAAO,SAACV,GACjB,OACI,yBAAKC,UAAU,oBACX,kDACA,yBAAKA,UAAU,4BACXE,EAAOG,kBAAkBK,KAAI,SAAAF,GAAK,OAAE,kBAAC,EAAD,CAAWA,MAAOA,QAE1D,2CACA,yBAAKR,UAAU,4BAEPE,EAAOE,WAAWM,KAAI,SAAAF,GAAK,OAAI,kBAAC,EAAD,CAAWA,MAAOA,QAGzD,oDACA,yBAAKR,UAAU,4BAEPE,EAAOI,oBAAoBI,KAAI,SAAAF,GAAK,OAAI,kBAAC,EAAD,CAAWA,MAAOA,UChBjEG,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OACI,yBAAKZ,UAAU,gBACX,2BAAG,oCAAH,IAAiBY,EAAQC,MACzB,2BAAG,2CAAH,IAAwBD,EAAQE,gBCR/BC,EAAW,CACpBlB,QAAS,WACTM,MAAO,gEACPa,YAAa,CACT,CACIH,KAAM,8FACNC,YAAa,4WCAZG,G,MAAW,SAAC,GAAc,EAAZlB,MACvB,OACI,yBAAKC,UAAU,sBACX,yBAAKA,UAAU,4BAEPe,EAASC,YAAYN,KAAI,SAAAE,GAAO,OAAI,kBAAC,EAAD,CAAaA,QAASA,WCHjEM,G,MAAmB,SAAC,GAOrB,IANRC,EAMO,EANPA,gBACAC,EAKO,EALPA,cACAC,EAIO,EAJPA,gBAIO,EAHPzB,MAGO,EAFPM,OAEO,EADPa,SAEA,OACI,yBAAKf,UAAU,qBACX,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,gBAAgBmB,GAC9B,uBAAGnB,UAAU,cAAcoB,IAE/B,yBAAKpB,UAAU,qBAEP,CACIJ,MAAO,kBAAC,EAAD,MACPM,OAAQ,kBAAC,EAAD,MACRa,SAAS,kBAAC,EAAD,OACXM,OCxBTC,G,MAAQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,mBACnB,OACI,yBAAKvB,UAAU,WACX,yBAAKwB,IAAI,0CAA0CxB,UAAU,SAASyB,IAAI,mBAC1E,wBAAIzB,UAAU,aAAd,kBACA,uBAAGA,UAAU,YAAb,4DACA,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,uBAAuB0B,QAAS,kBAAIH,EAAmB,WAApE,YACA,uBAAGvB,UAAU,uBAAuB0B,QAAS,kBAAIH,EAAmB,YAApE,UACA,uBAAGvB,UAAU,uBAAuB0B,QAAS,kBAAIH,EAAmB,cAApE,gBCRHI,EAAW,SAAC,GAAiG,IAAhGJ,EAA+F,EAA/FA,mBAAoB3B,EAA2E,EAA3EA,MAAOM,EAAoE,EAApEA,OAAOa,EAA6D,EAA7DA,SAAUI,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,gBAClG,OACQ,yBAAKrB,UAAU,uBACf,yBAAKA,UAAU,qBACX,kBAAC,EAAD,CACAuB,mBAAoBA,KAExB,yBAAKvB,UAAU,0BACX,kBAAC,EAAD,CACCJ,MAAOA,EACPM,OAAQA,EACRa,SAAUA,EACVI,gBAAiBA,EACjBC,cAAeA,EACfC,gBAAiBA,OCmCnBO,G,MA/Cf,kDACE,aAAe,IAAD,8BACZ,gBAoBFL,mBAAmB,SAACM,GAClB,EAAKC,SAAS,CACZX,gBAAgB,EAAKY,MAAMF,GAAehC,QAC1CuB,cAAc,EAAKW,MAAMF,GAAe1B,MACxCkB,gBAAgBQ,KAvBlB,EAAKE,MAAM,CACTV,gBAAgB,GAChBF,gBAAgB,GAChBC,cAAc,GACdxB,MAAM,KACNM,OAAO,KACPa,SAAS,MARC,EADhB,gEAeIiB,KAAKF,SAAS,CACZlC,QAAMM,SAAOa,WACbI,gBAAgBvB,EAAMC,QACtBuB,cAAcxB,EAAMO,MACpBkB,gBAAgB,YAnBtB,+BA+BI,OACE,yBAAKrB,UAAU,OACf,kBAAC,EAAD,CACAJ,MAAOoC,KAAKD,MAAMnC,MAClBM,OAAQ8B,KAAKD,MAAM7B,OACnBa,SAAUiB,KAAKD,MAAMhB,SACrBI,gBAAiBa,KAAKD,MAAMZ,gBAC5BC,cAAeY,KAAKD,MAAMX,cAC1BC,gBAAiBW,KAAKD,MAAMV,gBAC5BE,mBAAoBS,KAAKT,0BAxC/B,GAAyBU,cCKLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ab9313e8.chunk.js","sourcesContent":["export const about = {\r\n    heading: \"About Me\",\r\n    \"quote\": \"The harder you work for something, \\nthe greater you’ll feel when you achieve it.\",\r\n    \"bio\": \"I have recently graduated in Biosciences and Bioengineering at IIT Guwahati. I had interned at Embibe as a project co-ordinator where I was responsible for handling the day-to-day work of other interns, teachers and reporting it to the management team. As for my academic credentials, I had published a research paper titled “An insight into the mechanism of peroxidase-like activity of carbon dots” on Carbon Journal. \\n\\nOn the positions of responsibility front, I was an organizing team member of Public Relation and Branding, Techniche 2017, the annual cultural fest of IIT Guwahati. I was responsible for advertisement of various technical events such as workshops and Industrial Conclaves in various colleges across the country. I have gained diverse experiences during the course of my B.Tech and I have realized that web-development is something that I am really keen on. So I am actively seeking for full-time opportunities as a web-developer.\"\r\n};","import React from \"react\";\r\nimport \"./about.css\";\r\nimport {about} from \"./../../constants/About\";\r\nexport const About=(props)=>{\r\n    return(\r\n        <div className=\"about-container\">\r\n             {about.bio}\r\n        </div>\r\n    )\r\n}","export const skills={\r\n    heading:\"Skills\",\r\n    quote: \"Build your skills, not your resume\",\r\n    techSkills:[\r\n        \"JavaScript\",\r\n        \"ReactJS\",\r\n        \"C++\",\r\n        \"C\",\r\n        \"HTML\",\r\n        \"CSS\",\r\n        \"BootStrap\"\r\n    ],\r\n    industryKnowledge:[\r\n\"Software\",\r\n\"Frontend\",\r\n\"Web\",\r\n\"AutoDoc\",\r\n\"Gaussian\"\r\n    ],\r\n    interpersonalSkills: [\r\n        \"Communication\",\r\n        \"Teaching\",\r\n        \"Time Management\",\r\n        \"Leadership\",\r\n        \"Management\"\r\n    ]\r\n}","  \r\nimport React from 'react';\r\n\r\nimport './skill-card.css';\r\n\r\nexport const SkillCard = ({ skill }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            {skill}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./skills.css\";\r\nimport {skills} from \"./../../constants/Skills\";\r\nimport {SkillCard} from \"./../SkillCard/SkillCard\";\r\nexport const Skills=(props)=>{\r\n    return(\r\n        <div className=\"skills-container\">\r\n            <h3>Industry Knowledge</h3>\r\n            <div className=\"industry-skill-container\">\r\n               {skills.industryKnowledge.map(skill=><SkillCard skill={skill}/>)}\r\n            </div>\r\n            <h3>Tech Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Interpersonal Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './projectCard.css';\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Name:</b> {project.name}</p>\r\n            <p><b>Description:</b> {project.description}</p>\r\n        </div>\r\n    )\r\n}","export const projects = {\r\n    heading: \"Projects\",\r\n    quote: \"Ahh, Learning alone is boring, implementation is the real fun\",\r\n    projectList: [\r\n        {\r\n            name: \"Role of Different Functional Groups in the Peroxidase-like Activity of Carbon Nanomaterials\",\r\n            description: \"Studying the interaction of glutamic acid-ABTS, ABTS-hydrogen peroxide, and glutamic acidABTS- hydrogen peroxide maintaining the same pH level on Gaussian 09W software to find out the optimized structures and the difference of binding energies among them using various methods \\n The methods used are semi-empirical, Hartree-Fock, DFT, MP4, CCSD, and CASSCF.\"\r\n        }\r\n    ]\r\n}","import React from 'react';\r\n\r\nimport { ProjectCard } from \"./../ProjectCard/ProjectCard\";\r\nimport {projects} from \"./../../constants/Projects\";\r\nimport './projects.css';\r\n\r\nexport const Projects = ({ props }) => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    projects.projectList.map(project => <ProjectCard project={project} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { About } from './../About/About';\r\nimport { Skills } from './../Skills/Skills';\r\nimport {Projects} from \"./../Projects/Projects\";\r\n\r\nimport './section-container.css';\r\n\r\nexport const SectionContainer = ({ \r\n    selectedHeading, \r\n    selectedQuote,\r\n    selectedSection,\r\n    about,\r\n    skills,\r\n    projects\r\n     }) => {\r\n    return (\r\n        <div className=\"section-container\">\r\n            <div className=\"section-heading-container\">\r\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\r\n                <p className=\"main-quote\">{selectedQuote}</p>\r\n            </div>\r\n            <div className=\"section-component\">\r\n                {\r\n                    {\r\n                        about: <About  />,\r\n                        skills: <Skills />,\r\n                        projects:<Projects/>\r\n                    }[selectedSection]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './sidenav.css';\r\n\r\n\r\nexport const SideNav=({handleSectionClick})=>{\r\n    return(\r\n        <div className=\"sidenav\">\r\n            <img src=\"https://i.ibb.co/qMTG0QT/hritushree.jpg\" className=\"avatar\" alt=\"Hritushree Mog\"/>\r\n            <h2 className=\"main-name\">Hritushree Mog</h2>\r\n            <p className=\"subtitle\">\"A Cadet Who is looking for an Opportunity in front-end\"</p>\r\n            <div className=\"sections-list\">\r\n                <p className=\"section-list-element\" onClick={()=>handleSectionClick(\"about\")} >About Me</p>\r\n                <p className=\"section-list-element\" onClick={()=>handleSectionClick(\"skills\")} >Skills</p>\r\n                <p className=\"section-list-element\" onClick={()=>handleSectionClick(\"projects\")} >Projects</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./portfolio.css\";\r\nimport {SectionContainer} from \"./../SectionContainer/SectionContainer\";\r\nimport {SideNav} from'./../SideNav/SideNav';\r\n\r\nexport const Portfolio =({handleSectionClick, about, skills,projects, selectedHeading, selectedQuote, selectedSection})=>{\r\n    return(\r\n            <div className=\"portfolio-container\">\r\n            <div className=\"sidenav-container\">\r\n                <SideNav\r\n                handleSectionClick={handleSectionClick}/>\r\n            </div>\r\n            <div className=\"main-section-container\">\r\n                <SectionContainer\r\n                 about={about}\r\n                 skills={skills}\r\n                 projects={projects}\r\n                 selectedHeading={selectedHeading}\r\n                 selectedQuote={selectedQuote}\r\n                 selectedSection={selectedSection}\r\n               />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\nimport {Portfolio} from './Portfolio/Portfolio';\nimport './App.css';\nimport { about } from '../constants/About';\nimport {skills} from './../constants/Skills';\nimport {projects} from \"./../constants/Projects\";\n\nexport class App extends Component {\n  constructor (){\n    super();\n    this.state={\n      selectedSection:\"\",\n      selectedHeading:\"\",\n      selectedQuote:\"\",\n      about:null,\n      skills:null,\n      projects:null\n    };\n\n  }\n  componentDidMount()\n  {\n    this.setState({\n      about,skills,projects,\n      selectedHeading:about.heading,\n      selectedQuote:about.quote,\n      selectedSection:\"about\"\n    });\n  }\n  handleSectionClick=(selectionName)=>{\n    this.setState({\n      selectedHeading:this.state[selectionName].heading,\n      selectedQuote:this.state[selectionName].quote,\n      selectedSection:selectionName\n    });\n  }\n  render()\n  {\n    return(\n      <div className=\"App\">\n      <Portfolio \n      about={this.state.about}\n      skills={this.state.skills}\n      projects={this.state.projects}\n      selectedHeading={this.state.selectedHeading}\n      selectedQuote={this.state.selectedQuote}\n      selectedSection={this.state.selectedSection}\n      handleSectionClick={this.handleSectionClick}\n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}